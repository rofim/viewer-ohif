version: 0.2

# env:
#   variables:
#     BUILD_ENV: "staging|preprod|production"
#     S3_BUCKET: ""
#     CLOUDFRONT_DISTRIB: ""

phases:
    install:
        runtime-versions:
            nodejs: 18
        commands:
            # Get latest revision
            - git checkout $(aws ssm get-parameter --name /${PROJECT}/${ENVIRONMENT}/cicd/${APP}/revision | jq -r .Parameter.Value)
            # Install node dependancies.
            #- npm config set @rofim:registry https://npm.pkg.github.com
            #- npm config set //npm.pkg.github.com/:_authToken=${GITHUB_NPM_PASSWORD}
            #- npm ci
            - yarn install
    build:
        commands:
            # Builds Angular application. You can also build using custom environment here like mock or staging
            - echo Build started on `date`
            - sed -i "s/ORTHANC_DOMAIN_NAME/$ORTHANC_DOMAIN_NAME/" platform/app/.env.rofim.example
            - cp -f platform/app/.env.rofim.example platform/app/.env
            - yarn build
            - echo Build completed on `date`
    post_build:
        commands:
            - echo Deployment started on `date`
            # Copy all files with standard configuration #604800 = 7 days
            - aws s3 sync --cache-control "public, max-age=604800" platform/app/dist/ s3://${S3_BUCKET}/_client/ --delete --exclude "index.html" --exclude "app-config.js" --exclude "silent-refresh.html"
        # Add a "no-cache" metadata to prevent browser to keep cache of index.html and i18n folder (and contents)
            - aws s3 cp --cache-control "no-cache" platform/app/dist/index.html s3://${S3_BUCKET}/
            - aws s3 cp --cache-control "no-cache" platform/app/dist/silent-refresh.html s3://${S3_BUCKET}/
            - aws s3 cp --cache-control "no-cache" platform/app/dist/app-config.js s3://${S3_BUCKET}/
            # Invalidate files on CloudFront
            - aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIB} --paths '/*'
            - echo Deployment completed on `date`
